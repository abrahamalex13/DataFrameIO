# motivation for Tox: standardize automated testing.

# Tox can (across multiple OS) -- 
# - Eliminate PYTHONPATH challenges when running scripts/tests
# - Eliminate virtualenv setup confusion
# - Streamline steps such as model training, model publishing

# above notes adapted from Chris Samiullah's course
# also see: https://christophergs.com/python/2020/04/12/python-tox-why-use-it-and-tutorial/



# one bracketed block is one "section" -- 
	# one test environment configuration 

# global settings:
	# on submit of `tox` command, which environment(s) should run?
	# does not search for a Python pkg setup
[tox] 
envlist = test 
skipsdist = True 

# special keyword for testing environment
[testenv] 
install_command = pip install {opts} {packages}
deps = -r requirements/requirements_test.txt

# recall, this env will auto-run on `tox` if in global envlist
# else, could run via `tox -e ENV_NAME`
[testenv:test] 
setenv =
	PYTHONPATH=.
	PYTHONHASHSEED=0

commands=
	pytest \
	-s \
	-v \
	{posargs:tests/}